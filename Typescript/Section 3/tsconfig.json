{
  "compilerOptions": {
    "target": "es6", // 37. 어떤 자바스크립트 버전으로 컴파일을 할 것인지 알려줌.
    "module": "commonjs",
    "lib": [
      "dom",
      "es6",
      "dom.iterable",
      "scripthost"
    ], // 38.  dom API를 타입스크립트에서 사용할 수 있게 한다. 필자가 작성한 설정들은 "es6" 버전에 있는 기본 설정들임. 참고바람

    // [중요] 40. 소스맵 옵션은 디버깅을 단순화 하기 때문에 프로젝트에서 유용하다.
    // 맵파일을 만들어주는 기능인데, 맵파일은 js 파일과 ts 파일 간의 디버거를 이어주는 브릿지 역할을 한다.
    "sourceMap": true, 

    // 41. rootDir와 outDir을 모두 사용하여 파일이 있는 위치와 빌드될 위치에 대해 명확하게 할 수 있음.
    "outDir": "./dist", 
    "rootDir": "./src",

    "removeComments": true, // 41. 컴파일 될때, 모든 주석이 js 파일에서 제거됨. -> 파일 용량을 줄일때 유용함.

    "noEmitOnError": true, // 42. 컴파일시 파일 소스중 에러가 있다면 '컴파일 중지'

    "strict": true, // 43. strict에 관련된 모든 옵션들을 true
    "noImplicitAny": true, // 43. 코드에서 작업하고 있는 매개변수와 값을 명확히 할 수 있도록 도와줌.
    "strictNullChecks": true, // 43. null 값을 잠재적으로 가질 수 있는 value에 접근하고 작업하는 방식을 타입스크립트에게 엄격하게 알려줌.
    "strictBindCallApply": true, // 43. bind, call, apply중 무엇에 해당하는지 확인하고 인수가 제대로 된 값을 넣었는지 확인해줌

    "noUnusedLocals": true, // 44. 사용하지 않는 '지역변수'에 대한 경고
    "noUnusedParameters": true, // 44. 사용하지 않는 '매개변수'에 대한 경고
    "noImplicitReturns": true, // 44. 분기문에서 리턴하는 것이 아닌 스코프 내에서 '무조건 반환되는 값'이 있어야 한다는 경고
  },
  "exclude": [ // 파일을 '제외'시킴
    "node_moudles" // 라이브러리들 중 일부가 타입스크립트 파일이 있는 경우 컴파일 해서는 안됨. -> 최악의 경우 프로젝트가 망가짐
  ],
  "include": [ // 파일을 '포함'시킴
    "app.ts",
    "*.module.ts" // module.ts 파일들을 모두 컴파일
  ]
}